; vim: filetype=clojure

; Require external libraries
(require '[clj-http.client :as http])

; Listen on the local interface over TCP (5555) and websockets (5556)
(let [host "127.0.0.1"]
  (tcp-server {:host host})
  (ws-server  {:host host})
)


; Utility functions
(defn scale_up [event]
      (try
        (http/post "http://requestb.in/1lpk6hj1" { :content-type :json
                                                   :form-params { :value { :host      (:host    event)
                                                                           :service   (:service event)
                                                                           :metric    (:metric  event)
                                                                           :state     (:state   event)
                                                                           :container (:container event)
                                                                         }
                                                                }
                                                 }
        )
        (catch Exception e (println (str "caught exception: " (.getMessage e))))
      )
)

; Define streams
(streams
  ; Scaling up
  (where (service "cpu")
         ; CPU usage raises over 70% with stable behavior
         (by [:container] (stable 10 #(>= 70 (:metric %)) (throttle 1 60 scale_up)))
  )
)
